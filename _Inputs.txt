ACTION	_Inputs:
(*Private action _Inputs of MOD_N2Flush*)
AiPica12501(inConvert := 14);
AiPica12505(inConvert := 14);
AiFia12501(fFilterFactor := 0.1,inConvert := 8);
AiFia12502(fFilterFactor := 0.1,inConvert := 8);
AiFia12503(fFilterFactor := 0.1,inConvert := 8);
AiFia12534(inConvert := 8);
PtTira12502(
	ifMinRange		:= 0.0,
	ifMaxRange		:= 200.0,
	ifFilterFactor	:= 1,
	ifCfgRangeErr	:=-999,
	inSensorType	:=TEMPERATURE);

PtTira12503(
	ifMinRange		:= 0.0,
	ifMaxRange		:= 200.0,
	ifFilterFactor	:= 1,
	ifCfgRangeErr	:=-999,
	inSensorType	:=TEMPERATURE);

PtTira12505(
	ifMinRange		:= 0.0,
	ifMaxRange		:= 200.0,
	ifFilterFactor	:= 1,
	ifCfgRangeErr	:=-999,
	inSensorType	:=TEMPERATURE);

PtTira12520(
	ifMinRange		:= 0.0,
	ifMaxRange		:= 200.0,
	ifFilterFactor	:= 1,
	ifCfgRangeErr	:=-999,
	inSensorType	:=TEMPERATURE);

PtTia12530();
PtTia12531();
PtTia12532();
PtTia12533();
AiPi12526(
	fMinRange		:= 0.0,
	fMaxRange		:= 10.0,
	fFilterFactor	:= 1,
	inConvert		:= 14
	);



DevFira12520(
	bReqEnable:= ibReqEnable,
	fFilterFactor:= 0.01,
	ifHmiMinH2O2Concentration:= ,
	ibEnableH2O2ConcentrationAlarm:= devM12520.bReqStartForward
	);



(* o2 detection *)
_O2Operator();
_O2Outfeed();
_O2Hue();

(* H2O2 detection*)
_H2O2Left();
_H2O2Right();


END_ACTION
